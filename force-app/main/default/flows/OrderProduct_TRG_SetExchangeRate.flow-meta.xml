<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <environments>Default</environments>
    <formulas>
        <name>form_N_amountInEur</name>
        <dataType>Number</dataType>
        <expression>{!$Record.TotalPrice} / {!GET_Exchange_Rate.ConversionRate}</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>OrderProduct_TRG_SetExchangeRate {!$Flow.CurrentDateTime}</interviewLabel>
    <label>OrderProduct_TRG_SetExchangeRate</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GET_Exchange_Rate</name>
        <label>GET Exchange Rate</label>
        <locationX>176</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SET_Exchange_Rate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsoCode</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.CurrencyIsoCode</elementReference>
            </value>
        </filters>
        <filters>
            <field>NextStartDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.ServiceDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>StartDate</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.ServiceDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>DatedConversionRate</object>
        <sortField>NextStartDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>SET_Exchange_Rate</name>
        <label>SET Exchange Rate</label>
        <locationX>176</locationX>
        <locationY>395</locationY>
        <inputAssignments>
            <field>ConversionRate__c</field>
            <value>
                <elementReference>GET_Exchange_Rate.ConversionRate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TotalPriceInCorporateCurrencie__c</field>
            <value>
                <elementReference>form_N_amountInEur</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GET_Exchange_Rate</targetReference>
        </connector>
        <filterFormula>ISNEW() || 
ISCHANGED({!$Record.ServiceDate}) ||
ISCHANGED({!$Record.ListPrice})</filterFormula>
        <object>OrderItem</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
